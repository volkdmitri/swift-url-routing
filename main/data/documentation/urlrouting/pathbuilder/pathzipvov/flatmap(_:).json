{"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOV\/flatMap(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOV\/Parser-Implementations"]]},"kind":"symbol","sections":[],"metadata":{"modules":[{"name":"URLRouting"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","text":"FlatMap","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","roleHeading":"Instance Method","title":"flatMap(_:)","externalID":"s:7Parsing6ParserPAAE7flatMapyAA7ParsersO04FlatD0Vy_qd__xGqd__6OutputQzcAaBRd__5InputQyd__ALRtzlF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B6ZipVOVV","extendedModule":"Parsing"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/flatmap(_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser into a new parser."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"FlatMap","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that transforms output from an upstream parser into a new parser."}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that transforms values of this parserâ€™s output and returns a","type":"text"},{"text":" ","type":"text"},{"text":"new parser.","type":"text"}]}],"name":"transform"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This method is similar to ","type":"text"},{"code":"Sequence.flatMap","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Optional.flatMap","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Result.flatMap","type":"codeVoice"},{"text":" in the","type":"text"},{"text":" ","type":"text"},{"text":"Swift standard library, as well as ","type":"text"},{"code":"Publisher.flatMap","type":"codeVoice"},{"text":" in the Combine framework.","type":"text"}],"type":"paragraph"},{"anchor":"Printability","text":"Printability","level":2,"type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"Parser.flatMap"},{"type":"text","text":" is "},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"type":"text","text":" printable, as the logic contained inside its transform operation to"},{"type":"text","text":" "},{"type":"text","text":"some new parser is not reversible."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you are building a parser-printer, avoid uses of "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" and instead prefer the use of"},{"type":"text","text":" "},{"type":"codeVoice","code":"Parser\/flatMap(_:)"},{"type":"text","text":" with conversions that preserve printability."}],"type":"paragraph"}]}],"references":{"http://github.com/pointfreeco/swift-parsing":{"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","title":"Parsing","type":"link","titleInlineContent":[{"type":"text","text":"Parsing"}],"url":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOV/Parser-Implementations":{"kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOV\/Parser-Implementations","type":"topic","abstract":[],"title":"Parser Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/parser-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","url":"\/documentation\/parsing\/parsers","title":"Parsers","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"title":"PathBuilder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathBuilder"}],"url":"\/documentation\/urlrouting\/pathbuilder","kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathBuilder"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","title":"URLRouting","type":"topic","url":"\/documentation\/urlrouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","type":"reference"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOV/flatMap(_:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOV\/flatMap(_:)","title":"flatMap(_:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser into a new parser."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","text":"FlatMap","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov\/flatmap(_:)"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOV":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOV","type":"topic","abstract":[],"title":"PathBuilder.PathZipVOV","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvov","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipVOV"}],"navigatorTitle":[{"kind":"identifier","text":"PathZipVOV"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","title":"Parser","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/FlatMap":{"kind":"symbol","title":"Parsers.FlatMap","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FlatMap","abstract":[{"type":"text","text":"A parser that transforms the output of another parser into a new parser."}],"navigatorTitle":[{"kind":"identifier","text":"FlatMap"}],"url":"\/documentation\/parsing\/parsers\/flatmap"}}}