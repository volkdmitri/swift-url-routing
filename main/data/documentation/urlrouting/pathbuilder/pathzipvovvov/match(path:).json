{"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Parser.match(path:)"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVOV\/match(path:)"},"sections":[],"metadata":{"modules":[{"name":"URLRouting"}],"roleHeading":"Instance Method","externalID":"s:7Parsing6ParserP10URLRoutingAD14URLRequestDataV5InputRtzrlE5match4path6OutputQzSS_tKF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipVOVVOVV","title":"match(path:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"URLRequestData"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"extendedModule":"Parsing"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVOV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVOV\/Parser-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/match(path:)"]}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"title":"PathBuilder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathBuilder"}],"url":"\/documentation\/urlrouting\/pathbuilder","kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathBuilder"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVVOV/Parser-Implementations":{"title":"Parser Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVOV\/Parser-Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/parser-implementations","type":"topic","abstract":[],"role":"collectionGroup"},"http://github.com/pointfreeco/swift-parsing":{"titleInlineContent":[{"type":"text","text":"Parsing"}],"title":"Parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","type":"link"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVVOV":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVOV","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"PathZipVOVVOV"}],"title":"PathBuilder.PathZipVOVVOV","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipVOVVOV"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","title":"URLRouting","type":"topic","url":"\/documentation\/urlrouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","type":"reference"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVVOV/match(path:)":{"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvov\/match(path:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"role":"symbol","title":"match(path:)","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"URLRequestData"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVOV\/match(path:)","kind":"symbol","abstract":[]}}}