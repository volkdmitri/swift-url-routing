{"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ParserPrinter.request(for:)"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOV\/request(for:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOV\/ParserPrinter-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/request(for:)"]}],"metadata":{"role":"symbol","extendedModule":"Parsing","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:20FoundationNetworking10URLRequestV","text":"URLRequest"}],"symbolKind":"method","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"code":"URLRequestData","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"URLRouting"}],"roleHeading":"Instance Method","title":"request(for:)","externalID":"s:7Parsing13ParserPrinterP10URLRoutingAD14URLRequestDataV5InputRtzrlE7request3for20FoundationNetworking0E0V6OutputQz_tKF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B8ZipOOVOVV"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"request","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"route","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:20FoundationNetworking10URLRequestV","text":"URLRequest"}],"languages":["swift"],"platforms":["Linux"]}]}],"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOVOV/ParserPrinter-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOV\/ParserPrinter-Implementations","abstract":[],"role":"collectionGroup","title":"ParserPrinter Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/parserprinter-implementations","type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"role":"collection","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","title":"URLRouting","type":"topic","url":"\/documentation\/urlrouting","abstract":[{"type":"text","text":"A bidirectional URL router with more type safety and less fuss. This library is built with "},{"isActive":true,"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","type":"reference"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOVOV":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipOOVOV"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOV","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathZipOOVOV"}],"abstract":[],"title":"PathBuilder.PathZipOOVOV","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov"},"http://github.com/pointfreeco/swift-parsing":{"titleInlineContent":[{"type":"text","text":"Parsing"}],"title":"Parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","type":"link","url":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipOOVOV/request(for:)":{"abstract":[],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"URLRequestData"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"request(for:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"URLRequest","preciseIdentifier":"s:20FoundationNetworking10URLRequestV","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipOOVOV\/request(for:)","type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipoovov\/request(for:)","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"title":"PathBuilder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PathBuilder"}],"url":"\/documentation\/urlrouting\/pathbuilder","kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathBuilder"}]}}}