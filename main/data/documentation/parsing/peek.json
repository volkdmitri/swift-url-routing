{"abstract":[{"type":"text","text":"A parser that runs the given parser, but does not consume any input."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/peek"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/upstream"]},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/parse(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/print(_:into:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek"},"metadata":{"roleHeading":"Structure","externalID":"s:7Parsing4PeekV","symbolKind":"struct","title":"Peek","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Peek"}],"navigatorTitle":[{"kind":"identifier","text":"Peek"}],"role":"symbol","modules":[{"name":"Parsing"}]},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To"}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It lets the upstream parser “peek” into the input without consuming it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, identifiers (variables, functions, etc.) in Swift allow the first character to be a"},{"type":"text","text":" "},{"type":"text","text":"letter or underscore, but not a digit, but subsequent characters can be digits. "},{"type":"emphasis","inlineContent":[{"text":"E.g.","type":"text"}]},{"type":"text","text":", "},{"type":"codeVoice","code":"foo123"},{"type":"text","text":" "},{"type":"text","text":"is a valid identifier, but "},{"code":"123foo","type":"codeVoice"},{"type":"text","text":" is not. We can create an identifier parser by using "},{"code":"Peek","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"to first check if the input starts with a letter or underscore, and if it does, return the"},{"type":"text","text":" "},{"type":"text","text":"remainder of the input up to the first character that is not a letter, a digit, or an"},{"type":"text","text":" "},{"type":"text","text":"underscore."}]},{"type":"codeListing","code":["let identifier = Parse {","  Peek { Prefix(1) { $0.isLetter || $0 == \"_\" } }","  Prefix { $0.isNumber || $0.isLetter || $0 == \"_\" }","}","","try identifier.parse(\"foo123\") \/\/ ✅ \"foo123\"","try identifier.parse(\"_foo123\") \/\/ ✅ \"_foo123\"","try identifier.parse(\"1_foo123\") \/\/ ❌","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | 1_foo123","\/\/   | ^ expected 1 element satisfying predicate"],"syntax":"swift"}]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","title":"Parser","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/ParserPrinter-Implementations":{"role":"collectionGroup","url":"\/documentation\/parsing\/peek\/parserprinter-implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/ParserPrinter-Implementations","title":"ParserPrinter Implementations","type":"topic","abstract":[],"kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/parserprinter","abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"title":"ParserPrinter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/parse(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"role":"symbol","kind":"symbol","title":"parse(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"type":"topic","url":"\/documentation\/parsing\/peek\/parse(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Peek"}],"url":"\/documentation\/parsing\/peek","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Peek"}],"title":"Peek","type":"topic","abstract":[{"type":"text","text":"A parser that runs the given parser, but does not consume any input."}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/upstream":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/upstream","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"upstream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"}],"abstract":[],"title":"upstream","kind":"symbol","url":"\/documentation\/parsing\/peek\/upstream"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/init(_:)":{"url":"\/documentation\/parsing\/peek\/init(_:)","title":"init(_:)","type":"topic","role":"symbol","abstract":[{"text":"Construct a parser that runs the given parser, but does not consume any input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","title":"Parsing","kind":"symbol","role":"collection","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/Parser-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/Parser-Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/peek\/parser-implementations","title":"Parser Implementations","kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/Peek/print(_:into:)":{"abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Peek\/print(_:into:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"print"},{"kind":"text","text":"((), "},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/parsing\/peek\/print(_:into:)","type":"topic","title":"print(_:into:)"}}}