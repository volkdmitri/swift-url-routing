{"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-8sywj","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-9kyot","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:by:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/areEquivalent","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/possibleMatch"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefixupto"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"This parser is named after "},{"type":"codeVoice","code":"Sequence.prefix(upTo:)"},{"type":"text","text":", and uses similar logic under the hood to"},{"type":"text","text":" "},{"type":"text","text":"consume and return input up to a particular subsequence."}],"type":"paragraph"},{"code":["let lineParser = PrefixUpTo(\"\\n\")","","var input = \"Hello\\nworld\\n\"[...]","try line.parse(&input)  \/\/ \"Hello\"","input                   \/\/ \"\\nworld\\n\""],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"metadata":{"modules":[{"name":"Parsing"}],"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}],"externalID":"s:7Parsing10PrefixUpToV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"role":"symbol","symbolKind":"struct","title":"PrefixUpTo"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo"},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","title":"Parsing","kind":"symbol","role":"collection","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"url":"\/documentation\/parsing\/parserprinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"type":"topic","title":"ParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/init(_:)-7b2he":{"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[],"role":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/parsing\/prefixupto\/init(_:)-7b2he","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/init(_:by:)":{"title":"init(_:by:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/prefixupto\/init(_:by:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:by:)","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/possibleMatch":{"title":"possibleMatch","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"possibleMatch","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/prefixupto\/possiblematch","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/possibleMatch","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","title":"Parser","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/parse(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Input"}],"type":"topic","kind":"symbol","title":"parse(_:)","url":"\/documentation\/parsing\/prefixupto\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/parse(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/areEquivalent":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/areEquivalent","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"areEquivalent"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/parsing\/prefixupto\/areequivalent","title":"areEquivalent","kind":"symbol","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/init(_:)-9kyot":{"title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":".","kind":"text"},{"text":"UTF8View","kind":"typeIdentifier","preciseIdentifier":"s:SS8UTF8ViewV"},{"text":")","kind":"text"}],"abstract":[],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/parsing\/prefixupto\/init(_:)-9kyot","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-9kyot","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/init(_:)-8sywj":{"role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"init(_:)","url":"\/documentation\/parsing\/prefixupto\/init(_:)-8sywj","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Input.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/init(_:)-8sywj"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/ParserPrinter-Implementations":{"abstract":[],"url":"\/documentation\/parsing\/prefixupto\/parserprinter-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations","title":"ParserPrinter Implementations","kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo/Parser-Implementations":{"url":"\/documentation\/parsing\/prefixupto\/parser-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo\/Parser-Implementations","role":"collectionGroup","type":"topic","title":"Parser Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrefixUpTo":{"title":"PrefixUpTo","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrefixUpTo","url":"\/documentation\/parsing\/prefixupto","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}]}}}