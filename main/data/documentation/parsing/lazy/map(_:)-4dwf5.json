{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Lazy\/Parser-Implementations"]]},"abstract":[{"type":"text","text":"Returns a parser that replaces the "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" output of this parser with the output of a given"},{"type":"text","text":" "},{"type":"text","text":"closure."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Lazy\/map(_:)-4dwf5"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/MapConstant","kind":"typeIdentifier","text":"MapConstant","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A parser of outputs.","type":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A closure that returns an output.","type":"text"}],"type":"paragraph"}],"name":"transform"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"A printer-friendly version of ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/map(_:)-2e6si","isActive":true,"type":"reference"},{"text":" for ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" outputs, so long as","type":"text"},{"text":" ","type":"text"},{"code":"NewOutput","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","code":["enum Role: String {","  case admin","  case guest","  case member","}","","let role = OneOf {","  \"admin\".map { Role.admin }","  \"guest\".map { Role.guest }","  \"member\".map { Role.member }","}","","try role.parse(\"admin\")  \/\/ Role.admin","role.print(.guest)       \/\/ \"guest\""],"syntax":"swift"}]}],"kind":"symbol","sections":[],"metadata":{"symbolKind":"method","externalID":"s:7Parsing6ParserPAAE3mapyAA7ParsersO11MapConstantVy_xqd__Gqd__yXEyt6OutputRtzlF::SYNTHESIZED::s:7Parsing4LazyC","extendedModule":"Parsing","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"MapConstant","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"Parsing"}],"role":"symbol","title":"map(_:)"},"variants":[{"paths":["\/documentation\/parsing\/lazy\/map(_:)-4dwf5"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/map(_:)-2e6si":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/map(_:)-2e6si","url":"\/documentation\/parsing\/parser\/map(_:)-2e6si","title":"map(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","text":"MapConstant","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a parser that replaces the "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" output of this parser with the output of a given"},{"type":"text","text":" "},{"type":"text","text":"closure."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Lazy/Parser-Implementations":{"abstract":[],"url":"\/documentation\/parsing\/lazy\/parser-implementations","type":"topic","kind":"article","role":"collectionGroup","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Lazy\/Parser-Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Lazy/parse(_:)":{"title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Lazy\/parse(_:)","url":"\/documentation\/parsing\/lazy\/parse(_:)","kind":"symbol","role":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","url":"\/documentation\/parsing\/parsers","title":"Parsers","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Lazy/map(_:)-4dwf5":{"abstract":[{"text":"Returns a parser that replaces the ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" output of this parser with the output of a given","type":"text"},{"text":" ","type":"text"},{"text":"closure.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MapConstant","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Lazy\/map(_:)-4dwf5","kind":"symbol","url":"\/documentation\/parsing\/lazy\/map(_:)-4dwf5","title":"map(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Lazy":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Lazy\/parse(_:)"},{"type":"text","text":" method before running the given closure to"},{"type":"text","text":" "},{"type":"text","text":"create a parser for the given input."}],"url":"\/documentation\/parsing\/lazy","type":"topic","kind":"symbol","role":"symbol","title":"Lazy","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Lazy","navigatorTitle":[{"kind":"identifier","text":"Lazy"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","title":"Parsing","kind":"symbol","role":"collection","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/MapConstant":{"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/MapConstant","title":"Parsers.MapConstant","type":"topic","navigatorTitle":[{"text":"MapConstant","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/mapconstant","abstract":[{"type":"text","text":"A parser that replaces another parser’s "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" output with some new output."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapConstant","kind":"identifier"}]}}}