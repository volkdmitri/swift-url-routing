{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"]]},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0","interfaceLanguage":"swift"},"metadata":{"title":"parse(_:)","roleHeading":"Instance Method","extendedModule":"Parsing","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"symbolKind":"method","externalID":"s:7Parsing6ParserPAAE5parsey6OutputQzqd__KSlRd__11SubSequenceQyd__5InputRtzlF","modules":[{"name":"Parsing"}],"role":"symbol"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A more well-structured value parsed from the given input."}]}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"input","content":[{"inlineContent":[{"text":"A nebulous collection of data to be parsed.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Rather than having to create a mutable subsequence value, such as a "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":", and feed it"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"},{"type":"text","text":" method like this:"}]},{"type":"codeListing","code":["var input = \"123,true\"[...]","let output = try Parse {","  Int.parser()","  \",\"","  Bool.parser()","}",".parse(&input) \/\/ (123, true)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"You can just feed a plain ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" input directly:","type":"text"}]},{"type":"codeListing","code":["let output = try Parse {","  Int.parser()","  \",\"","  Bool.parser()","}",".parse(\"123,true\") \/\/ (123, true)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This method will fail if the parser does not consume the entirety of the input.","type":"text"},{"text":" ","type":"text"},{"text":"For example:","type":"text"}]},{"type":"codeListing","code":["let output = try Parse {"," Int.parser()"," \",\""," Bool.parser()","}",".parse(\"123,true    \")","","\/\/ error: unexpected input","\/\/  --> input:1:9","\/\/ 1 | 123,true␣␣␣␣","\/\/   |         ^ expected end of input"],"syntax":"swift"},{"type":"aside","style":"tip","content":[{"inlineContent":[{"type":"text","text":"If your input can have trailing whitespace that you would like to consume and discard"},{"type":"text","text":" "},{"type":"text","text":"you can do so like this:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let output = try Parse {","  Int.parser()","  \",\".utf8","  Bool.parser()","  Whitespace()","}",".parse(\"123,true    \") \/\/ (123, true)"]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser\/parse(_:)-6h1d0"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"text":"Parse a collection into an output using a parser that works on the collection’s ","type":"text"},{"type":"codeVoice","code":"SubSequence"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This method is more ergnomic to use than ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","isActive":true,"type":"reference"},{"text":" because it accepts a","type":"text"},{"text":" ","type":"text"},{"text":"collection directly rather than its subsequence, and the input does not need to be ","type":"text"},{"type":"codeVoice","code":"inout"},{"text":".","type":"text"}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","title":"Parser","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/parse(_:)-76tcw":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"title":"parse(_:)","defaultImplementations":3,"role":"symbol","type":"topic","url":"\/documentation\/parsing\/parser\/parse(_:)-76tcw","required":true},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","title":"Parsing","kind":"symbol","role":"collection","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/parse(_:)-6h1d0":{"abstract":[{"text":"Parse a collection into an output using a parser that works on the collection’s ","type":"text"},{"code":"SubSequence","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This method is more ergnomic to use than ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","type":"reference","isActive":true},{"text":" because it accepts a","type":"text"},{"text":" ","type":"text"},{"text":"collection directly rather than its subsequence, and the input does not need to be ","type":"text"},{"code":"inout","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"title":"parse(_:)","url":"\/documentation\/parsing\/parser\/parse(_:)-6h1d0","type":"topic"}}}