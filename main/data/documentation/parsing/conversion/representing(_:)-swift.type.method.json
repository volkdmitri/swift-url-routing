{"abstract":[{"text":"A conversion from a given raw representable typeâ€™s raw value to itself.","type":"text"}],"metadata":{"roleHeading":"Type Method","role":"symbol","title":"representing(_:)","symbolKind":"method","externalID":"s:7Parsing10ConversionPAAE12representingyAA11ConversionsO12FromRawValueVy_qd__Gqd__mAIRszSYRd__lFZ","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"Parsing","modules":[{"name":"Parsing"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"representing","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:7Parsing11ConversionsO","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","kind":"typeIdentifier","text":"Conversions"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing11ConversionsO12FromRawValueV","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromRawValue","kind":"typeIdentifier","text":"FromRawValue"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SY","kind":"typeIdentifier","text":"RawRepresentable"}]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A conversion from a raw value to the given type."}]}],"kind":"content"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A type that conforms to "},{"code":"RawRepresentable","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"type"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This conversion is useful for mapping the output of a more primitive parser-printer into a"},{"type":"text","text":" "},{"type":"text","text":"raw representable value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you may have a raw representable type that wraps a more primitive type for the"},{"type":"text","text":" "},{"type":"text","text":"purpose of strengthening type requirements in your APIs. One example is an identifier type"},{"type":"text","text":" "},{"type":"text","text":"that wraps an integer:"}]},{"type":"codeListing","code":["struct UserID: RawRepresentable {","  var rawValue: Int","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can transform an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" parser into a "},{"type":"codeVoice","code":"UserID"},{"type":"text","text":" parser by invoking "},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/map(_:)-18m9d","isActive":true},{"type":"text","text":" "},{"type":"text","text":"with this conversion:"}]},{"type":"codeListing","code":["let userID = Int.parser().map(.representing(UserID.self))"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion\/representing(_:)-swift.method","type":"reference","isActive":true},{"type":"text","text":" for a fluent version of this interface that transforms"},{"type":"text","text":" "},{"type":"text","text":"an existing conversion. This fluent API is particularly useful when mapping string raw values"},{"type":"text","text":" "},{"type":"text","text":"directly from parsers of substrings and UTF-8 views, which require first transforming the"},{"type":"text","text":" "},{"type":"text","text":"parsed substring or UTF-8 view into a string via the "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","type":"reference","isActive":true},{"type":"text","text":" and"},{"type":"text","text":" "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","type":"reference","isActive":true},{"type":"text","text":" conversions."}]},{"type":"codeListing","code":["struct EmailAddress: RawRepresentable {","  var rawValue: String","}","","let emailAddress = Parse(.string.representing(EmailAddress.self)) {","  Consumed {","    PrefixUpTo(\"@\")","    \"@\"","    Rest()","  }","}"],"syntax":"swift"}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversion\/representing(_:)-swift.type.method"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion":{"kind":"symbol","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"role":"symbol","title":"Conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/conversion","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion/string-swift.type.property-9owth":{"type":"topic","role":"symbol","title":"string","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-9owth","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO13BytesToStringV","text":"BytesToString"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View"},{"kind":"text","text":">"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.BytesToString<Substring.UTF8View>"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"A conversion from ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/map(_:)-18m9d":{"kind":"symbol","role":"symbol","title":"map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"MapConversion","preciseIdentifier":"s:7Parsing7ParsersO13MapConversionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/parsing\/parser\/map(_:)-18m9d","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/map(_:)-18m9d","abstract":[{"type":"text","text":"Returns a parser-printer that transforms the output of this parser with a given conversion."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion/representing(_:)-swift.method":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion\/representing(_:)-swift.method","abstract":[{"type":"text","text":"Transforms this conversion to a raw value into a conversion to the given raw representable"},{"type":"text","text":" "},{"type":"text","text":"type."}],"title":"representing(_:)","type":"topic","url":"\/documentation\/parsing\/conversion\/representing(_:)-swift.method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"text":"NewOutput","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"FromRawValue","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO12FromRawValueV"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion/representing(_:)-swift.type.method":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method","abstract":[{"type":"text","text":"A conversion from a given raw representable typeâ€™s raw value to itself."}],"title":"representing(_:)","type":"topic","url":"\/documentation\/parsing\/conversion\/representing(_:)-swift.type.method","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"text":"NewOutput","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/FromRawValue":{"type":"topic","abstract":[{"type":"text","text":"A conversion from a raw value to a raw representable type."}],"title":"Conversions.FromRawValue","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/FromRawValue","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromRawValue"}],"role":"symbol","navigatorTitle":[{"text":"FromRawValue","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions\/fromrawvalue"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","title":"Parsing","kind":"symbol","role":"collection","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion/string-swift.type.property-3u2b5":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubstringToString","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","role":"symbol","type":"topic","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-3u2b5","kind":"symbol","abstract":[{"type":"text","text":"A conversion from "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.SubstringToString","type":"codeVoice"},{"text":".","type":"text"}]},"title":"string"}}}