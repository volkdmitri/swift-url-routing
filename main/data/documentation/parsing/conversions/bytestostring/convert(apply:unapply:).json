{"metadata":{"symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","extendedModule":"Parsing","title":"convert(apply:unapply:)","externalID":"s:7Parsing10ConversionPAAE7convert5apply7unapplyAA03AnyB0Vyqd__qd_0_Gqd_0_Sgqd__c_qd__Sgqd_0_ctAIRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO13BytesToStringV","modules":[{"name":"Parsing"}],"roleHeading":"Type Method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion","text":"AnyConversion","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing13AnyConversionV"},{"text":"<","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A conversion that invokes the given apply and unapply functions."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that attempts to convert an input into an output. "},{"type":"codeVoice","code":"apply"},{"type":"text","text":" is executed"},{"type":"text","text":" "},{"type":"text","text":"each time the "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToString\/apply(_:)","isActive":true,"type":"reference"},{"type":"text","text":" method is called on the resulting conversion. If the closure"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", an error is thrown. Otherwise, the value is unwrapped.","type":"text"}]}],"name":"apply"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that attempts to convert an output into an input. "},{"type":"codeVoice","code":"unapply"},{"type":"text","text":" is executed"},{"type":"text","text":" "},{"type":"text","text":"each time the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToString\/unapply(_:)"},{"type":"text","text":" method is called on the resulting conversion. If the closure"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", an error is thrown. Otherwise, the value is unwrapped."}]}],"name":"unapply"}],"kind":"parameters"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Useful for experimenting with conversions in a lightweight manner, without the ceremony of","type":"text"},{"text":" ","type":"text"},{"text":"defining a dedicated type.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["struct Amount {","  var cents: Int","}","","let amount = Parse(","  .convert(","    apply: { dollars, cents in Amount(cents: dollars * 100 + cents) },","    unapply: { amount in amount.cents.quotientAndRemainder(dividingBy: 100) }","  )",") {","  Digits()","  \".\"","  Digits(2)","}"]},{"type":"paragraph","inlineContent":[{"text":"If performance is a concern, you should define a custom type that conforms to ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"instead, which avoids the overhead of escaping closures, gives the compiler the ability to","type":"text"},{"text":" ","type":"text"},{"text":"better optimize, and puts your in a better position to test the conversion.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["struct AmountConversion: Conversion {","  func apply(_ dollarsAndCents: (Int, Int)) -> Amount {","    return Amount(cents: dollarsAndCents.0 * 100 + dollarsAndCents.1)","  }","","  func unapply(_ amount: Amount) -> (Int, Int) {","    amount.cents.quotientAndRemainder(dividingBy: 100)","  }","}","","let amount = Parse(AmountConversion()) {","  Digits()","  \".\"","  Digits(2)","}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToString","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToString\/Conversion-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToString\/convert(apply:unapply:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/bytestostring\/convert(apply:unapply:)"]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/AnyConversion":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyConversion","navigatorTitle":[{"kind":"identifier","text":"AnyConversion"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyConversion"}],"kind":"symbol","abstract":[{"text":"A type-erased ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","title":"AnyConversion","type":"topic","url":"\/documentation\/parsing\/anyconversion"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BytesToString/unapply(_:)":{"type":"topic","title":"unapply(_:)","role":"symbol","abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToString\/unapply(_:)","url":"\/documentation\/parsing\/conversions\/bytestostring\/unapply(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BytesToString/Conversion-Implementations":{"url":"\/documentation\/parsing\/conversions\/bytestostring\/conversion-implementations","abstract":[],"role":"collectionGroup","title":"Conversion Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToString\/Conversion-Implementations","kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","url":"\/documentation\/parsing","title":"Parsing","kind":"symbol","role":"collection","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion":{"kind":"symbol","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"role":"symbol","title":"Conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/conversion","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BytesToString/apply(_:)":{"type":"topic","title":"apply(_:)","role":"symbol","abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToString\/apply(_:)","url":"\/documentation\/parsing\/conversions\/bytestostring\/apply(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BytesToString/convert(apply:unapply:)":{"type":"topic","title":"convert(apply:unapply:)","role":"symbol","abstract":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToString\/convert(apply:unapply:)","url":"\/documentation\/parsing\/conversions\/bytestostring\/convert(apply:unapply:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversions/BytesToString":{"type":"topic","role":"symbol","title":"Conversions.BytesToString","url":"\/documentation\/parsing\/conversions\/bytestostring","navigatorTitle":[{"kind":"identifier","text":"BytesToString"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BytesToString"}],"abstract":[{"text":"A conversion from a ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrependableCollection","isActive":true},{"text":" of UTF-8 bytes to a string.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversions\/BytesToString"},"doc://co.pointfree.URLRouting/documentation/Parsing/PrependableCollection":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/PrependableCollection","title":"PrependableCollection","type":"topic","url":"\/documentation\/parsing\/prependablecollection","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"abstract":[{"type":"text","text":"A collection that supports empty initialization and the ability to prepend a sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements of elements to itself."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}]}}}